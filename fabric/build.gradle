plugins {
    id 'com.github.johnrengelman.shadow'
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath

    runs {
        datagen {
            inherit client

            name "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${project(":common").file("src/main/generated")}"
            vmArg "-Dfabric-api.datagen.modid=jcraft_requiem"

            runDir "build/datagen"
        }
    }
}


dependencies {
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"

    modImplementation "net.fabricmc.fabric-api:fabric-api:$rootProject.fabric_api_version"

    modImplementation "dev.architectury:architectury-fabric:$rootProject.architectury_api_version"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionFabric')

    //Geckolib
    //modImplementation("software.bernie.geckolib:geckolib-fabric-${minecraft_version}:${geckolib_version}")
    //implementation("com.eliotlash.mclib:mclib:20")
    include modImplementation("mod.azure.azurelib:azurelib-fabric-1.20.1:${azurelib_version}")

    //Player Anim
    include modImplementation("dev.kosmx.player-anim:player-animation-lib-fabric:${rootProject.player_anim_version}")

    // Terrablender
    include modImplementation("com.github.glitchfiend:TerraBlender-fabric:${minecraft_version}-${terrablender_version}")

    // Trimmed
    include modImplementation("maven.modrinth:trimmed:${minecraft_version}-${trimmed_version}+fabric")

    //CCA
    include modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-base:5.2.2")
    include modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:5.2.2")
    include modImplementation("dev.onyxstudios.cardinal-components-api:cardinal-components-world:5.2.2")

    //Cloth
    include modApi("me.shedaniel.cloth:cloth-config-fabric:11.1.118")

    //Modmenu
    modApi "com.terraformersmc:modmenu:7.2.2"

    //modImplementation "com.fusionflux:gravity_api-fabric-${gravity_api_version}"

    //JCraft
    include modImplementation(files('../locallibs/jcraft-fabric-0.16.3.jar'))


    modRuntimeOnly "com.ptsmods:devlogin:3.5"
}

processResources {
    inputs.property 'version', project.version

    filesMatching('fabric.mod.json') {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}
